html {
  background: conic-gradient(at 1% 50%, rgb(10, 199, 247), rgb(6, 201, 32));

  /* @media (--dark) {
    background: conic-gradient(at -10% 50%, #212529, 50%, #495057, #212529);
  } */
}
/* 3D perspective */
body {
  perspective: 40vw;
}


 
 
 
 
 
 /* @custom-media --motionOK (prefers-reduced-motion: no-preference);
@custom-media --dark (prefers-color-scheme: dark);
@custom-media --HDcolor (dynamic-range: high); */


 
  
.threeD-button-set {
  --y:;
  --x:;
  --distance: 1px;
  --theme: hsl(180 100% 50%);
  --theme-bg: hsl(180 100% 50% / 25%);
  --theme-bg-hover: hsl(180 100% 50% / 40%);
  --theme-text: rgb(32, 247, 12);
  --theme-shadow: rgba(0, 51, 7, 0.5);
  

  --_max-rotateY: 10deg;
  --_max-rotateX: 15deg;
  --_btn-bg: var(--theme-bg);
  --_btn-bg-hover: var(--theme-bg-hover);
  --_btn-text: var(--theme-text);
  --_btn-text-shadow: var(--theme-shadow);
  --_bounce-ease: cubic-bezier(.5, 1.75, .75, 1.25);
    /* remove <ul> margins */
    margin: 0;
  
    /* vertical rag-right layout */
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2.5vh;
    /* create 3D space context */
  transform-style: preserve-3d;

   /* clamped menu rotation to not be too extreme */
   transform:
   rotateY(
     clamp(
       calc(var(--_max-rotateY) * -1),
       var(--y),
       var(--_max-rotateY)
     )
   )
   rotateX(
     clamp(
       calc(var(--_max-rotateX) * -1),
       var(--x),
       var(--_max-rotateX)
     )
   )
 ;
 
  /* browser hint so it can be prepared and optimized */
  will-change: transform;

  /* transition transform style changes and run an infinite animation */
  transition: transform .1s ease;
  animation: rotate-y 5s ease-in ;
  /* transform: translateZ(var(--distance));
  transform-style: preserve-3d; */
}

@keyframes rotate-y {
  20% {
    transform: rotateY(15deg) rotateX(-6deg);
  }
}

.threeD-button-set > li {
  /* change display type from list-item */
  display: inline-flex;

  /* create context for button pseudos */
  position: relative;

  /* create 3D space context */
  transform-style: preserve-3d;
}

.threeD-button-set button {
  /* strip out default button styles */
  appearance: none;
  outline: none;
  border: none;
  box-shadow: -11px 10px 14px 0px rgba(0,0,0,0.73);
-webkit-box-shadow: -11px 10px 14px 0px rgba(0,0,0,0.73);
-moz-box-shadow: -11px 10px 14px 0px rgba(0,0,0,0.73);

  /* bring in brand styles via props */
  background-color: var(--_btn-bg);
  color: var(--_btn-text);
  /* text-shadow: 0 1px 1px var(--_btn-text-shadow); */
  text-shadow: 5px 1px 2px rgba(0,0,0,0.63);

  /* large text rounded corner and padded*/
  font-size: 5vmin;
  font-family: Audiowide;
  padding-block: .75ch;
  padding-inline: 2ch;
  border-radius: 5px 20px;
  transform: translateZ(var(--distance));
  transform-style: preserve-3d;

  &::after {
    /* pull forward in Z space with a 3x multiplier */
    transform: translateZ(calc(var(--distance) / 3));
  }

  &::before {
    /* push back in Z space with a 3x multiplier */
    transform: translateZ(calc(var(--distance) / 3 * -1));
  }
  @media (--motionOK) {
    will-change: transform;
    transition:
      transform .2s ease,
      background-color .5s ease
    ;

    &::before,
    &::after {
      transition: transform .1s ease-out;
    }

    &::after    { transition-duration: .5s }
    &::before { transition-duration: .3s }
  }
} .threeD-button button {
  &::after,
  &::before {
    /* create empty element */
    content: '';
    opacity: .8;

    /* cover the parent (button) */
    position: absolute;
    inset: 0;

    /* style the element for border accents */
    border: 1px solid var(--theme);
    border-radius: 5px 20px;
  }

  /* exceptions for one of the pseudo elements */
  /* this will be pushed back (3x) and have a thicker border */
  &::before {
    border-width: 3px;
  }
  &:is(:hover, :focus-visible):not(:active) {
    /* subtle distance plus bg color change on hover/focus */
    --distance: 15px;
    background-color: var(--_btn-bg-hover);

    /* if motion is OK, setup transitions and increase distance */
    @media (--motionOK) {
      --distance: 3vmax;

      transition-timing-function: var(--_bounce-ease);
      transition-duration: .4s;

      &::after  { transition-duration: .5s }
      &::before { transition-duration: .3s }
    }
  }
}
}
 
 
